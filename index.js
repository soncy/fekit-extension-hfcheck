// Generated by CoffeeScript 1.9.0
(function() {
  var checkFiles, endHandler, errorsHandler, fileHandler, fs, path, rules, run, walk;

  path = require('path');

  fs = require('fs');

  walk = require('walk');

  rules = require('./lib/rules/checkRules');

  exports.usage = "检查代码是否和header冲突及合规";

  exports.set_options = function(optimist) {
    return optimist;
  };

  exports.run = function(options) {
    return run();
  };

  run = function() {
    var checkFolder;
    checkFolder = process.argv[3] || 'prd';
    console.log('check header start');
    return checkFiles(checkFolder);
  };

  checkFiles = function(checkFolder) {
    var needCheckFolder, walker;
    needCheckFolder = path.join(process.cwd(), checkFolder);
    if (fs.existsSync(needCheckFolder) === false) {
      console.log("no the folder " + needCheckFolder + ", none need check");
      return;
    }
    walker = walk.walk(needCheckFolder, {
      followLinks: false
    });
    walker.on('file', fileHandler);
    walker.on('end', endHandler);
    return walker.on('error', errorsHandler);
  };

  fileHandler = function(root, fileStat, next) {
    var filePath;
    filePath = path.resolve(root, fileStat.name);
    rules.applyRules(filePath);
    return next();
  };

  errorsHandler = function(root, nodeStatsArray, next) {
    nodeStatsArray.forEach(function(n) {
      console.error("[ERROR] " + n.name);
      return console.error(n.error.message || (n.error.code + ": " + n.error.path));
    });
    return next();
  };

  endHandler = function() {
    return console.log('check done');
  };

}).call(this);
